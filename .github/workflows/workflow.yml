name: Test, Build, Release, Publish

on:
  push:
    branches:
      - master
      - main

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.x"]
    steps:
      - uses: actions/checkout@master

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |  
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install poetry

      - name: Install poetry dependencies
        run: |  
          python -m poetry update --with test

      - name: Run tests
        run: |
          python -m poetry run coverage run --omit=./tests/* -m pytest -v

      - name: Generate Coverage Report
        run: |  
          python -m poetry run coverage report
          python -m poetry run coverage xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            slug: ddc/pythonLogs

      - name: Build package
        run: |  
          python -m poetry build

      - name: Store the distribution packages to publish to pypi
        uses: actions/upload-artifact@master
        with:
          name: python-package-distributions
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs:
      - test_and_build
    env:
      GITHUB_TOKEN: ${{ github.token }}
    permissions:
      contents: write
      pull-requests: read
    steps:
      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: patch # major | minor | patch
          tag_prefix: v
          release_name: "Version <RELEASE_VERSION>"
          release_body: ${{ steps.release.outputs.tag_name }}

      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"
          echo "Upload release artifacts to ${{ steps.release.outputs.upload_url }}"

  publish-to-test-pypi:
    runs-on: ubuntu-latest
    environment: release
    needs:
      - release
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@master
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    runs-on: ubuntu-latest
    environment: release
    needs:
      - release
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@master
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
